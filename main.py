import os
import json
from flask import Flask, request
import telebot
from telebot import types
from datetime import datetime

# Flask app
app = Flask(__name__)

# Telegram bot
BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

# –§–∞–π–ª—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è
HISTORY_FILE = "history.json"
MEMORY_FILE = "memory.json"

# –ó–∞–≥—Ä—É–∑–∫–∞/—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
def load_json(filename):
    if os.path.exists(filename):
        with open(filename, "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

def save_json(filename, data):
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

history = load_json(HISTORY_FILE)
memory = load_json(MEMORY_FILE)

# –ú–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_menu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("/–≤—Å–ø–æ–º–Ω–∏", "/–¥–Ω–µ–≤–Ω–∏–∫", "/–æ—á–∏—Å—Ç–∏", "/—Å–æ–≤–µ—Ç")
    return keyboard

# –ö–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=["start"])
def handle_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –®–µ—Ä–ª–æ–∫ üïµÔ∏è‚Äç‚ôÇÔ∏è", reply_markup=main_menu())

@bot.message_handler(commands=["–≤—Å–ø–æ–º–Ω–∏"])
def handle_memory(message):
    user_id = str(message.chat.id)
    notes = memory.get(user_id, [])
    text = "\n".join(f"‚Ä¢ {note}" for note in notes) if notes else "–Ø –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–ø–æ–º–Ω–∏–ª üß†"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=["–¥–Ω–µ–≤–Ω–∏–∫"])
def handle_history(message):
    user_id = str(message.chat.id)
    logs = history.get(user_id, [])
    text = "\n".join(f"[{item['time']}] {item['text']}" for item in logs) if logs else "–î–Ω–µ–≤–Ω–∏–∫ –ø–æ–∫–∞ –ø—É—Å—Ç üï∞Ô∏è"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=["–æ—á–∏—Å—Ç–∏"])
def handle_clear(message):
    user_id = str(message.chat.id)
    history[user_id] = []
    memory[user_id] = []
    save_json(HISTORY_FILE, history)
    save_json(MEMORY_FILE, memory)
    bot.send_message(message.chat.id, "–ü–∞–º—è—Ç—å –∏ –¥–Ω–µ–≤–Ω–∏–∫ –æ—á–∏—â–µ–Ω—ã üßΩ")

@bot.message_handler(commands=["—Å–æ–≤–µ—Ç"])
def handle_tip(message):
    bot.send_message(message.chat.id, "–ü–æ–¥–µ–ª–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è –Ω–∞ –¥—É—à–µ ‚Äî –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda m: True)
def handle_text(message):
    user_id = str(message.chat.id)
    text = message.text.strip()

    # –ü–∞–º—è—Ç—å
    memory.setdefault(user_id, []).append(text)
    memory[user_id] = memory[user_id][-20:]
    save_json(MEMORY_FILE, memory)

    # –ò—Å—Ç–æ—Ä–∏—è
    history.setdefault(user_id, []).append({
        "text": text,
        "time": datetime.now().strftime("%d.%m %H:%M")
    })
    history[user_id] = history[user_id][-50:]
    save_json(HISTORY_FILE, history)

    bot.send_message(message.chat.id, "–ó–∞–ø–æ–º–Ω–∏–ª üíæ")

# –í–µ–±—Ö—É–∫
@app.route('/webhook', methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        update = telebot.types.Update.de_json(request.get_data().decode("utf-8"))
        bot.process_new_updates([update])
        return '', 200
    return 'Invalid', 403

@app.route('/', methods=['GET'])
def index():
    return "Sherlock bot –∑–∞–ø—É—â–µ–Ω!"

# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
if __name__ == '__main__':
    app.run()
